// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: copyfrom.go

package database

import (
	"context"
)

// iteratorForCreateBulkScores implements pgx.CopyFromSource.
type iteratorForCreateBulkScores struct {
	rows                 []CreateBulkScoresParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateBulkScores) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateBulkScores) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].MatchID,
		r.rows[0].GameID,
		r.rows[0].Winner,
		r.rows[0].WinnerScore,
		r.rows[0].LoserScore,
		r.rows[0].CreatedAt,
		r.rows[0].PlayedAt,
	}, nil
}

func (r iteratorForCreateBulkScores) Err() error {
	return nil
}

func (q *Queries) CreateBulkScores(ctx context.Context, arg []CreateBulkScoresParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"scores"}, []string{"match_id", "game_id", "winner", "winner_score", "loser_score", "created_at", "played_at"}, &iteratorForCreateBulkScores{rows: arg})
}
