// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/gitznik/robswebhub/internal/templates/layouts"

func About(isLoggedIn bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<main class=\"container\"><h1>About me</h1><div class=\"grid\"><div><p>Hi, I'm Rob.</p><p>Over the last years I have worked hard on becoming a great software developer. I've spent this time in and adjacent to the data sphere professionally, while developing a handful of different things in my free time. This website you're looking at in fact is a Go API serving HTML pages with HTMX, among other tasks like communicating with a Postgres database. If you're interested in reading some of my opinion pieces, you can find them on my fairly inactive <a href=\"https://medium.com/@gitznik\">Medium Blog</a>.</p><p>I have also contributed to some open source projects that I have been using in my day to day. Most notably I'm maintainer of <a href=\"https://github.com/pypa/pipx\">Pipx</a>, and committed to <a href=\"https://github.com/dbt-labs/dbt-core\">DBT core</a> and <a href=\"https://github.com/airbytehq/airbyte\">Airbyte</a>.</p><p>Aside from my job, I'm a proud nerd, loving video games and collecting and building keyboards. I also keep myself healthy, playing Ping Pong, Spikeball and racing on Zwift.</p><p>Should you have any interesting proposals, feel free to reach out to me via my <a href=\"https://www.linkedin.com/in/robert-offner-065993191/\">LinkedIn</a>. Great to have you on my page!</p></div><div><img src=\"/images/profile.webp\" alt=\"Drawing of me\" width=\"372\" height=\"536.1\"></div></div><h2>Work Experience</h2><div><article><header><b>Software Engineer - Alpas</b></header><p>Notable Project:<br>Writing the backend for an internal task management solution, that allows creating a workstream of a multitude of different task types. This drastically increased the data quality of the task outputs while reducing the manual effort in operations.</p><ul><li>Responsible for developing and maintaining the internal backend supporting the data initiatives</li><li>Developing and maintaining<ul><li>an internal API written in Python & FastAPI</li><li>an internal Python package for developer productivity and utilities</li><li>all supporting tasks for infrastructure via Terraform, CI/CD, ...</li></ul></li></ul><footer>2023 - today</footer></article><article><header><b>Data Engineer - Kolibri Games (Ubisoft Mobile)</b></header><p>Notable Project:<br>Overhauling the entire data ingestion platform and process, reducing complexity and cost</p><ul><li>Responsible for data quality, reliability, accuracy and security</li><li>Developing and maintaining<ul><li>the data integration architecture</li><li>streaming and batch ETL and ELT pipelines from internal and external sources</li><li>analytical tools for business insights</li><li>data apps for workflow automation</li></ul></li></ul><footer>2021 - 2023</footer></article><article><header><b>Data Analyst - Kolibri Games (Ubisoft Mobile)</b></header><p>Notable Project:<br>Introducing DBT to the organisation and defining best practices by developing a model showing user level data on a daily breakdown, that was the basis of many exploratory analyses for years to come.</p><ul><li>Responsible for delivering meaningful business insights from the available data</li><li>Defining new data events if necessary</li><li>Creating new Silver and Bronze models to build analyses upon</li><li>Create Reports in Looker</li></ul><footer>2020 - 2021</footer></article></div><p><a href=\"/\" role=\"button\">Go back</a></p></main>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.Base("About", isLoggedIn).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
